setwd("~/Dropbox/RNFC/Businesses/2-Euclid/opportunities/1-Data/1-Private/COURSE/wip/2_pe/framework/wip2")
# Chunk 1
# Corey, Shamez and Janice
# https://rafael-zambrano-blog-ds.netlify.app/posts/automagic_tabs/
# TODOs:
#------------------------------------
# 0. Finish sections and use rectables:
# 1. Add lectures and original spreadsheets & including blueprints
# 2. Connect with article below
# https://www.linkedin.com/posts/rnfc_dba4761m5finalproject-activity-6875925555452153856-MCOz
# 3. Revise everything
library(DT)
library(rlang)
library(dplyr)
library(tidyr)
library(purrr)
library(tibble)
library(stringr)
library(sknifedatar)
# devtools::install_github("rafzamb/sknifedatar")
library(xaringanExtra)
# devtools::install_github("gadenbuie/xaringanExtra")
path_root=".."
path_output=file.path(path_root, "3_output")
load(file.path(path_output, "target_output.rda"))
options(
DT.options = list(
dom = 't', #dom = 'B',
buttons = I( c('csv', 'excel') ),
initComplete = JS(
"function(settings, json) {",
"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});",
"}")
)
)
xaringanExtra::use_panelset()
#--------------
# Whether they collect it themselves or acquire it from external sources, the amount of data available to private equity firms today is increasing exponentially. And firms that choose not to use data science data to create value risk hastening their own obsolescence or, at the very least, losing competitive advantage.
#--------------
# A treasure trove of data science recipes that help students achieve operational excellence, and develop competitive edge. I created this course partly in service to future analysts and associates who may be interested in private equity. I always advise students interested in private market investments to learn some coding and hope a few might be motivated by my work at OneSixtyTwo. If they learn to code in a programming language like R or Python, it will open new avenues for their analytical work, will vastly improve their productivity and will protect the future of their career as forces of automation and artificial intelligence rapidly advance in the financial industry. Those not interested in the coding can simply skip the coding and keep using Microsoft Excel.
#--------------
# My objective of sharing the course material above is not to provide prescriptive modeling lessons, but to instead provide students a menu of cases, with enough information to help them make the financial modeling choice that is best for the deal at hand. Put simply, I can provide some structure for you to organize what you already know, and tools that may help you put that knowledge into practice, but I am incapable of profundity. I hope that you do give one (or more) of my cases a shot and I hope that you enjoy the experience and get a chance to try it out at work.
# Once we have collected the data and identified a major business opportunity for using advanced analytics, students will work with the PE firm to undertake a process of building, testing, and iterating initial solutions, then rapidly scaling them to achieve maximum impact.
# Chunk 2
load("../3_output/target_output.rda")
scenarios <- scenarios %>% set_names(str_replace(names(.), "RNFC_", ""))
listviewer::jsonedit(scenarios)
# Chunk 3: business_description
out_business_description=map(
scenarios,
~.x$business %>%
map_dfc(~ifelse(length(.x)==1, .x, paste(.x, collapse=", ")))
) %>%
#datatable(rownames = FALSE) %>%
#bind_rows(.id="company") %>%
#nest(public_comparables=-company) %>%
tibble(
company=names(.),
business_description=.
) %>%
mutate(
business_description=map(
business_description,
~.x %>%
datatable(
rownames = FALSE #,
#extensions = c('Buttons', 'ColReorder', 'KeyTable', 'FixedColumns')
)
# MISSING FORMATTING!!!
)
)
# Chunk 5: security_description
idx <- list(
list(c(2:4, 6), c(5, 7)),
list(c(2:5), c(6:8))
)%>%
set_names(str_replace(names(scenarios), "RNFC_", ""))
out_security_description=map(
scenarios,
~ map_df(list(.x$security), bind_rows)
) %>%
tibble(
company=names(.),
security_description=.
) %>%
mutate(
security_description=map2(
company,
security_description,
~.y %>% {
v = names(.)
datatable(
.,
rownames = FALSE #,
#extensions = c('Buttons', 'ColReorder', 'KeyTable', 'FixedColumns')
)  %>%
formatCurrency(v[idx[[.x]][[1]]], currency = "") %>%
formatPercentage(v[idx[[.x]][[2]]], digits=2)
}
)
)
# Chunk 6: valuation_analytics_table
out_weighted_valuation=map(
scenarios,
~.x$valuation$summary[7:10] %>% map_df(bind_rows, .id="method")
) %>%
bind_rows(.id="company") %>%
nest(weighted_valuation=-company) %>%
mutate(
weighted_valuation=map(
weighted_valuation,
~.x %>%
datatable(
rownames = FALSE #,
#extensions = c('Buttons', 'ColReorder', 'KeyTable', 'FixedColumns')
) %>%
formatCurrency(names(.x)[c(2:3, 5:6)], currency = "") %>%
formatPercentage(names(.x)[c(4, 7)], digits=2)
)
)
map(
scenarios,
~.x$valuation_impairment %>% as_tibble
)
scenarios$COMP1$commentary$valuation_impairment
map(
scenarios,
~.x$commentary$valuation_impairment %>% as_tibble
)
map(
scenarios,
~.x$commentary$valuation_impairment %>% as_tibble
) %>%
bind_rows(.id="company") %>% {
v = names(.)[-1]
datatable(., caption ="Assumptions", rownames = FALSE)
}
map(
scenarios,
~.x$commentary$valuation_impairment %>% as_tibble
) %>%
bind_rows(.id="company") %>% {
v = names(.)[-1]
datatable(., caption ="Assumptions", rownames = FALSE)
}
map(
scenarios,
~.x$commentary$valuation_impairment %>% as_tibble
) %>%
bind_rows(.id="company") %>% {
v = names(.)[-1]
datatable(., caption ="Assumptions", rownames = FALSE)
} %>% rename(note=value)
map(
scenarios,
~.x$commentary$valuation_impairment %>% as_tibble
) %>%
bind_rows(.id="company") %>% {
v = names(.)[-1]
datatable(., caption ="Assumptions", rownames = FALSE)
} %>% rename(note="value")
rename
map(
scenarios,
~.x$commentary$valuation_impairment %>% as_tibble
) %>%
bind_rows(.id="company") %>% {
v = names(.)[-1]
datatable(., caption ="Assumptions", rownames = FALSE)
} %>% select(company, note=value)
map(
scenarios,
~.x$commentary$valuation_impairment %>% as_tibble
) %>%
bind_rows(.id="company") %>% {
v = names(.)[-1]
datatable(., caption ="Assumptions", rownames = FALSE)
}
map(
scenarios,
~.x$commentary$valuation_impairment %>% as_tibble
) %>%
bind_rows(.id="company") %>%
rename(note=value)
View(scenarios)
scenarios$COMP1$commentary$strengths_concerns
scenarios$COMP1$commentary$strengths_concerns$concerns
out_investment_strengths=map(
scenarios,
~.x$commentary$strengths_concerns$strengths %>% as_tibble
)
View(out_business_description)
out_investment_strengths=map(
scenarios,
~.x$commentary$strengths_concerns$strengths
)
out_investment_strengths=map(
scenarios,
~.x$commentary$strengths_concerns$strengths
) %>%
#datatable(rownames = FALSE) %>%
#bind_rows(.id="company") %>%
#nest(public_comparables=-company) %>%
tibble(
company=names(.),
investment_strengths=.
)
View(out_investment_strengths)
out_investment_strengths=map(
scenarios,
~.x$commentary$strengths_concerns$strengths
) %>%
#datatable(rownames = FALSE) %>%
#bind_rows(.id="company") %>%
#nest(public_comparables=-company) %>%
tibble(
company=names(.),
investment_strengths=.
) %>%
mutate(
investment_strengths=map(
investment_strengths,
~.x %>%
datatable(
rownames = FALSE #,
#extensions = c('Buttons', 'ColReorder', 'KeyTable', 'FixedColumns')
)
# MISSING FORMATTING!!!
)
)
out_investment_strengths=map(
scenarios,
~.x$commentary$strengths_concerns$strengths %>% as_tibble
) %>%
#datatable(rownames = FALSE) %>%
#bind_rows(.id="company") %>%
#nest(public_comparables=-company) %>%
tibble(
company=names(.),
investment_strengths=.
) %>%
mutate(
investment_strengths=map(
investment_strengths,
~.x %>%
datatable(
rownames = FALSE #,
#extensions = c('Buttons', 'ColReorder', 'KeyTable', 'FixedColumns')
)
# MISSING FORMATTING!!!
)
)
View(out_investment_strengths)
out_investment_strengths=map(
scenarios,
~.x$commentary$strengths_concerns$strengths %>% as_tibble
)
View(out_investment_strengths)
out_investment_strengths=map(
scenarios,
~.x$commentary$strengths_concerns$strengths %>% as_tibble
) %>%
#datatable(rownames = FALSE) %>%
#bind_rows(.id="company") %>%
#nest(public_comparables=-company) %>%
tibble(
company=names(.),
investment_strengths=.
) %>%
mutate(
investment_strengths=map(
investment_strengths,
~.x %>%
datatable(
rownames = FALSE #,
#extensions = c('Buttons', 'ColReorder', 'KeyTable', 'FixedColumns')
)
# MISSING FORMATTING!!!
)
)
View(out_investment_strengths)
out_investment_strengths=map(
scenarios,
~.x$commentary$strengths_concerns$strengths %>% as_tibble
) %>%
#datatable(rownames = FALSE) %>%
#bind_rows(.id="company") %>%
#nest(public_comparables=-company) %>%
tibble(
company=names(.),
investment_strengths=.
)
View(out_investment_strengths)
View(out_investment_strengths[[2]][[1]])
out_investment_strengths=map(
scenarios,
~.x$commentary$strengths_concerns$strengths %>% as_tibble(strength=.)
)
as_tibble
out_investment_strengths=map(
scenarios,
~.x$commentary$strengths_concerns$strengths %>% as_tibble %>% rename(strength=value)
) %>%
#datatable(rownames = FALSE) %>%
#bind_rows(.id="company") %>%
#nest(public_comparables=-company) %>%
tibble(
company=names(.),
investment_strengths=.
)
View(out_investment_strengths[[2]][[1]])
View(out_investment_strengths[[2]][[1]])
out_investment_strengths=map(
scenarios,
~.x$commentary$strengths_concerns$strengths %>% as_tibble %>% rename(strength=value)
) %>%
#datatable(rownames = FALSE) %>%
#bind_rows(.id="company") %>%
#nest(public_comparables=-company) %>%
tibble(
company=names(.),
investment_strengths=.
) %>%
mutate(
investment_strengths=map(
investment_strengths,
~.x %>%
datatable(
rownames = FALSE #,
#extensions = c('Buttons', 'ColReorder', 'KeyTable', 'FixedColumns')
)
# MISSING FORMATTING!!!
)
)
View(out_investment_strengths)
map(
scenarios,
~.x$commentary$calculations$implied_dollar_price %>% as_tibble
)
map(
scenarios,
~.x$commentary$calculations$implied_dollar_price %>% as_tibble
) %>%
bind_rows(.id="company")
map(
scenarios,
~ map_df(list(~.x$commentary$calculations$mezzanine_index), bind_rows)
)
map(
scenarios,
~.x$commentary$calculations$mezzanine_index
)
map(
scenarios,
~.x$commentary$calculations$mezzanine_index %>%
map_dfc(~.x)
)
map(
scenarios,
~.x$commentary$calculations$mezzanine_index %>%
map_dfc(~.x)
) %>%
tibble(
company=names(.),
mezzanine_index=.
)
setwd("~/Dropbox/RNFC/Businesses/2-Euclid/opportunities/1-Data/1-Private/COURSE/wip/2_pe/framework/2_data/xlsx")
saveRDS(tidyxl::xlsx_cells("RNFC_COMP1.xlsx"), file = "../RNFC_COMP1")
saveRDS(tidyxl::xlsx_cells("RNFC_COMP2.xlsx"), file = "../RNFC_COMP2")
saveRDS(tidyxl::xlsx_cells("RNFC_COMP1.xlsx"), file = "../RNFC_COMP1")
saveRDS(tidyxl::xlsx_cells("RNFC_COMP2.xlsx"), file = "../RNFC_COMP2")
